{"ast":null,"code":"var _jsxFileName = \"/home/chinmay/Desktop/react-code/src/components/Cards.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useState } from 'react';\nimport Card from './Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Cards({\n  logout\n}) {\n  _s();\n\n  const [cards, setCards] = useState([]);\n\n  async function getCards() {\n    try {\n      console.log(localStorage.token);\n      const response = await fetch('http://localhost:8080/cards', {\n        method: 'GET',\n        headers: {\n          Authorization: \"Bearer \" + localStorage.token\n        }\n      });\n      const parseRes = await response.json();\n      setCards(parseRes);\n    } catch (err) {\n      console.error(err.message);\n    }\n  }\n\n  useEffect(() => {\n    getCards();\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Cards\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: cards.map(card => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: card.card_id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"End\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Cards, \"M51NroWgc5aUEHiqsZiaQ+7WeWA=\");\n\n_c = Cards;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"sources":["/home/chinmay/Desktop/react-code/src/components/Cards.js"],"names":["React","useEffect","useState","Card","Cards","logout","cards","setCards","getCards","console","log","localStorage","token","response","fetch","method","headers","Authorization","parseRes","json","err","error","message","map","card","card_id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AACA,eAAe,SAASC,KAAT,CAAe;AAAEC,EAAAA;AAAF,CAAf,EAA2B;AAAA;;AACtC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;;AACA,iBAAeM,QAAf,GAA0B;AACtB,QAAI;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYC,YAAY,CAACC,KAAzB;AACA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAAD,EAAgC;AACxDC,QAAAA,MAAM,EAAE,KADgD;AAExDC,QAAAA,OAAO,EAAE;AACLC,UAAAA,aAAa,EAAE,YAAYN,YAAY,CAACC;AADnC;AAF+C,OAAhC,CAA5B;AAMA,YAAMM,QAAQ,GAAG,MAAML,QAAQ,CAACM,IAAT,EAAvB;AACAZ,MAAAA,QAAQ,CAACW,QAAD,CAAR;AACH,KAVD,CAUE,OAAOE,GAAP,EAAY;AACVX,MAAAA,OAAO,CAACY,KAAR,CAAcD,GAAG,CAACE,OAAlB;AACH;AACJ;;AACDrB,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,QAAQ;AACX,GAFQ,CAAT;AAIA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,gBACKF,KAAK,CAACiB,GAAN,CAAUC,IAAI,IAAI;AACf,4BACI;AAAA,oBAAKA,IAAI,CAACC;AAAV;AAAA;AAAA;AAAA;AAAA,gBADJ;AAGH,OAJA;AADL;AAAA;AAAA;AAAA;AAAA,YAFJ,eASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA,kBADJ;AAaH;;GAlCuBrB,K;;KAAAA,K;AAkCvB","sourcesContent":["import React, { useEffect } from 'react';\nimport { useState } from 'react';\nimport Card from './Card';\nexport default function Cards({ logout }) {\n    const [cards, setCards] = useState([]);\n    async function getCards() {\n        try {\n            console.log(localStorage.token);\n            const response = await fetch('http://localhost:8080/cards', {\n                method: 'GET',\n                headers: {\n                    Authorization: \"Bearer \" + localStorage.token\n                }\n            });\n            const parseRes = await response.json();\n            setCards(parseRes);\n        } catch (err) {\n            console.error(err.message);\n        }\n    }\n    useEffect(() => {\n        getCards();\n    });\n\n    return (\n        <>\n            <h1>Cards</h1>\n            <ul>\n                {cards.map(card => {\n                    return (\n                        <li>{card.card_id}</li>\n                    );\n                })}\n            </ul>\n            <h1>End</h1>\n        </>\n    );\n};"]},"metadata":{},"sourceType":"module"}