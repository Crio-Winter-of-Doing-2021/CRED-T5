{"ast":null,"code":"var _jsxFileName = \"/home/chinmay/Desktop/react-code/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport { toast } from \"react-toastify\"; //components\n\nimport Login from \"./components/Login\";\nimport Register from \"./components/Register\";\nimport Dashboard from \"./components/Dashboard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ntoast.configure();\n\nfunction App() {\n  _s();\n\n  const checkAuthenticated = async () => {\n    try {\n      const res = await fetch(\"http://localhost:5000/authentication/verify\", {\n        method: \"POST\",\n        headers: {\n          jwt_token: localStorage.token\n        }\n      });\n      const parseRes = await res.json();\n      parseRes === true ? setIsAuthenticated(true) : setIsAuthenticated(false);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  useEffect(() => {\n    checkAuthenticated();\n  }, []);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  const setAuth = boolean => {\n    setIsAuthenticated(boolean);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/login\",\n            render: props => !isAuthenticated ? /*#__PURE__*/_jsxDEV(Login, { ...props,\n              setAuth: setAuth\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n              to: \"/dashboard\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/register\",\n            render: props => !isAuthenticated ? /*#__PURE__*/_jsxDEV(Register, { ...props,\n              setAuth: setAuth\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n              to: \"/dashboard\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/dashboard\",\n            render: props => isAuthenticated ? /*#__PURE__*/_jsxDEV(Dashboard, { ...props,\n              setAuth: setAuth\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n              to: \"/login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"lpbwJc295eTP/lG5AGLUypzYWcU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/chinmay/Desktop/react-code/src/App.js"],"names":["React","Fragment","useState","useEffect","BrowserRouter","Router","Route","Switch","Redirect","toast","Login","Register","Dashboard","configure","App","checkAuthenticated","res","fetch","method","headers","jwt_token","localStorage","token","parseRes","json","setIsAuthenticated","err","console","error","message","isAuthenticated","setAuth","boolean","props"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,SAApC,QAAqD,OAArD;AAEA,OAAO,uCAAP;AACA,SACEC,aAAa,IAAIC,MADnB,EAEEC,KAFF,EAGEC,MAHF,EAIEC,QAJF,QAKO,kBALP;AAOA,SAASC,KAAT,QAAsB,gBAAtB,C,CAEA;;AAEA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;AAEAH,KAAK,CAACI,SAAN;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,kBAAkB,GAAG,YAAY;AACrC,QAAI;AACF,YAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,6CAAD,EAAgD;AACrEC,QAAAA,MAAM,EAAE,MAD6D;AAErEC,QAAAA,OAAO,EAAE;AAAEC,UAAAA,SAAS,EAAEC,YAAY,CAACC;AAA1B;AAF4D,OAAhD,CAAvB;AAKA,YAAMC,QAAQ,GAAG,MAAMP,GAAG,CAACQ,IAAJ,EAAvB;AAEAD,MAAAA,QAAQ,KAAK,IAAb,GAAoBE,kBAAkB,CAAC,IAAD,CAAtC,GAA+CA,kBAAkB,CAAC,KAAD,CAAjE;AACD,KATD,CASE,OAAOC,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAG,CAACG,OAAlB;AACD;AACF,GAbD;;AAeA1B,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,kBAAkB;AACnB,GAFQ,EAEN,EAFM,CAAT;AAIA,QAAM,CAACe,eAAD,EAAkBL,kBAAlB,IAAwCvB,QAAQ,CAAC,KAAD,CAAtD;;AAEA,QAAM6B,OAAO,GAAGC,OAAO,IAAI;AACzBP,IAAAA,kBAAkB,CAACO,OAAD,CAAlB;AACD,GAFD;;AAIA,sBACE,QAAC,QAAD;AAAA,2BACE,QAAC,MAAD;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACE,QAAC,MAAD;AAAA,kCACE,QAAC,KAAD;AACE,YAAA,KAAK,MADP;AAEE,YAAA,IAAI,EAAC,QAFP;AAGE,YAAA,MAAM,EAAEC,KAAK,IACX,CAACH,eAAD,gBACE,QAAC,KAAD,OAAWG,KAAX;AAAkB,cAAA,OAAO,EAAEF;AAA3B;AAAA;AAAA;AAAA;AAAA,oBADF,gBAGE,QAAC,QAAD;AAAU,cAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAPN;AAAA;AAAA;AAAA;AAAA,kBADF,eAYE,QAAC,KAAD;AACE,YAAA,KAAK,MADP;AAEE,YAAA,IAAI,EAAC,WAFP;AAGE,YAAA,MAAM,EAAEE,KAAK,IACX,CAACH,eAAD,gBACE,QAAC,QAAD,OAAcG,KAAd;AAAqB,cAAA,OAAO,EAAEF;AAA9B;AAAA;AAAA;AAAA;AAAA,oBADF,gBAGE,QAAC,QAAD;AAAU,cAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAPN;AAAA;AAAA;AAAA;AAAA,kBAZF,eAuBE,QAAC,KAAD;AACE,YAAA,KAAK,MADP;AAEE,YAAA,IAAI,EAAC,YAFP;AAGE,YAAA,MAAM,EAAEE,KAAK,IACXH,eAAe,gBACb,QAAC,SAAD,OAAeG,KAAf;AAAsB,cAAA,OAAO,EAAEF;AAA/B;AAAA;AAAA;AAAA;AAAA,oBADa,gBAGb,QAAC,QAAD;AAAU,cAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAPN;AAAA;AAAA;AAAA;AAAA,kBAvBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA2CD;;GArEQjB,G;;KAAAA,G;AAuET,eAAeA,GAAf","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\n\nimport \"react-toastify/dist/ReactToastify.css\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect\n} from \"react-router-dom\";\n\nimport { toast } from \"react-toastify\";\n\n//components\n\nimport Login from \"./components/Login\";\nimport Register from \"./components/Register\";\nimport Dashboard from \"./components/Dashboard\";\n\ntoast.configure();\n\nfunction App() {\n  const checkAuthenticated = async () => {\n    try {\n      const res = await fetch(\"http://localhost:5000/authentication/verify\", {\n        method: \"POST\",\n        headers: { jwt_token: localStorage.token }\n      });\n\n      const parseRes = await res.json();\n\n      parseRes === true ? setIsAuthenticated(true) : setIsAuthenticated(false);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  useEffect(() => {\n    checkAuthenticated();\n  }, []);\n\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  const setAuth = boolean => {\n    setIsAuthenticated(boolean);\n  };\n\n  return (\n    <Fragment>\n      <Router>\n        <div className=\"container\">\n          <Switch>\n            <Route\n              exact\n              path=\"/login\"\n              render={props =>\n                !isAuthenticated ? (\n                  <Login {...props} setAuth={setAuth} />\n                ) : (\n                  <Redirect to=\"/dashboard\" />\n                )\n              }\n            />\n            <Route\n              exact\n              path=\"/register\"\n              render={props =>\n                !isAuthenticated ? (\n                  <Register {...props} setAuth={setAuth} />\n                ) : (\n                  <Redirect to=\"/dashboard\" />\n                )\n              }\n            />\n            <Route\n              exact\n              path=\"/dashboard\"\n              render={props =>\n                isAuthenticated ? (\n                  <Dashboard {...props} setAuth={setAuth} />\n                ) : (\n                  <Redirect to=\"/login\" />\n                )\n              }\n            />\n          </Switch>\n        </div>\n      </Router>\n    </Fragment>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}