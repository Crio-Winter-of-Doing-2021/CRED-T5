{"ast":null,"code":"var _jsxFileName = \"/home/chinmay/Desktop/react-code/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport Login from \"./components/Login\";\nimport Signup from \"./components/Signup\";\nimport Cards from \"./components/Cards\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  const checkAuthenticated = async () => {\n    try {\n      const response = await fetch(\"http://localhost:8080/verify\", {\n        method: \"POST\",\n        headers: {\n          Authorization: \"Bearer \" + localStorage.token\n        }\n      });\n      const parseRes = await response.json();\n      parseRes === true ? setIsAuthenticated(true) : setIsAuthenticated(false);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  useEffect(() => {\n    checkAuthenticated();\n  }, []);\n\n  const setAuth = boolean => {\n    setIsAuthenticated(boolean);\n  };\n\n  const logout = boolean => {\n    setIsAuthenticated(false);\n    localStorage.removeItem(\"token\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: [\"/\", \"/login\"],\n          render: props => !isAuthenticated ? /*#__PURE__*/_jsxDEV(Login, { ...props,\n            setAuth: setAuth\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/cards\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/signup\",\n          render: props => !isAuthenticated ? /*#__PURE__*/_jsxDEV(Signup, { ...props,\n            setAuth: setAuth\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/cards\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/cards\",\n          render: props => isAuthenticated ? /*#__PURE__*/_jsxDEV(Cards, { ...props,\n            logout: logout\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"JkS3Meyzlj18m4l86SBr9YDqEkQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/chinmay/Desktop/react-code/src/App.js"],"names":["React","useState","useEffect","BrowserRouter","Router","Route","Switch","Redirect","Login","Signup","Cards","App","isAuthenticated","setIsAuthenticated","checkAuthenticated","response","fetch","method","headers","Authorization","localStorage","token","parseRes","json","err","console","error","message","setAuth","boolean","logout","removeItem","props"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport {BrowserRouter as Router,Route,Switch,Redirect\n} from \"react-router-dom\";\n\nimport Login from \"./components/Login\";\nimport Signup from \"./components/Signup\";\nimport Cards from \"./components/Cards\";\n\nfunction App() {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const checkAuthenticated = async () => {\n    try {\n      const response = await fetch(\"http://localhost:8080/verify\", {\n        method: \"POST\",\n        headers: {\n          Authorization: \"Bearer \" + localStorage.token\n        }\n      });\n      const parseRes = await response.json();\n      parseRes === true ? setIsAuthenticated(true) : setIsAuthenticated(false);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  useEffect(() => {\n    checkAuthenticated();\n  }, []);\n\n  const setAuth = boolean => {\n    setIsAuthenticated(boolean);\n  };\n\n  const logout = boolean => {\n    setIsAuthenticated(false);\n    localStorage.removeItem(\"token\");\n  }\n  return (\n    <>\n      <Router>\n        <Switch>\n          <Route\n            exact path={[\"/\",\"/login\"]} render={props =>\n              !isAuthenticated ? (\n                <Login {...props} setAuth={setAuth} />\n              ) : (\n                <Redirect to=\"/cards\" />\n              )\n            }\n          />\n          <Route\n            exact path=\"/signup\" render={props =>\n              !isAuthenticated ? (\n                <Signup {...props} setAuth={setAuth} />\n              ) : (\n                <Redirect to=\"/cards\" />\n              )\n            }\n          />\n          <Route exact path=\"/cards\" render={props =>\n            isAuthenticated ? (\n              <Cards {...props} logout={logout} />\n            ) : (\n              <Redirect to=\"/login\" />\n            )\n          }\n          />\n        </Switch>\n      </Router>\n    </>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}